import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.common.exceptions import NoSuchElementException, TimeoutException
import time
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
CACHE_FILE = "tiktok_cache.json"

def load_cache():
    if os.path.exists(CACHE_FILE):
        with open(CACHE_FILE, 'r') as f:
            return json.load(f)
    return {}

def save_cache(cache):
    with open(CACHE_FILE, 'w') as f:
        json.dump(cache, f)

def get_tiktok_user_data(username):
    cache = load_cache()
    if username in cache:
        return cache[username]
    
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36")
    
    # –†–ê–ë–û–ß–ò–ï –ü–†–û–ö–°–ò (–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ)
    PROXIES = [
        "http://45.142.28.21:8000",
        "http://193.149.225.128:80",
        "http://88.198.50.103:8080"
    ]
    
    user_data = {}
    driver = None
    
    for proxy in PROXIES:
        try:
            chrome_options.add_argument(f"--proxy-server={proxy}")
            driver = webdriver.Chrome(options=chrome_options)
            driver.set_page_load_timeout(30)
            driver.get(f"https://www.tiktok.com/@{username}")
            time.sleep(4)  # –ö—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 404
            if "Couldn't find this account" in driver.page_source:
                user_data = {"error": "–ê–∫–∫–∞—É–Ω—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}
                break
            
            # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
            user_data["full_name"] = driver.find_element(By.CSS_SELECTOR, 'h1[data-e2e="user-title"]').text
            user_data["bio"] = driver.find_element(By.CSS_SELECTOR, 'h2[data-e2e="user-bio"]').text
            user_data["following"] = driver.find_element(By.CSS_SELECTOR, 'strong[data-e2e="following-count"]').text
            user_data["followers"] = driver.find_element(By.CSS_SELECTOR, 'strong[data-e2e="followers-count"]').text
            user_data["likes"] = driver.find_element(By.CSS_SELECTOR, 'strong[data-e2e="likes-count"]').text
            user_data["private"] = "–î–∞" if driver.find_elements(By.CSS_SELECTOR, 'span[data-e2e="private-account"]') else "–ù–µ—Ç"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            user_data["verified"] = "–î–∞" if driver.find_elements(By.CSS_SELECTOR, 'svg[aria-label="Verified account"]') else "–ù–µ—Ç"
            
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –∫—ç—à
            cache[username] = user_data
            save_cache(cache)
            break
            
        except (NoSuchElementException, TimeoutException):
            logger.warning(f"–ü—Ä–æ–∫—Å–∏ {proxy} —É–ø–∞–ª, –ø—Ä–æ–±—É—é —Å–ª–µ–¥—É—é—â–∏–π...")
            continue
        except Exception as e:
            user_data = {"error": f"–û—à–∏–±–∫–∞: {str(e)}"}
        finally:
            if driver:
                driver.quit()
    
    return user_data

def tiktok_command(update: Update, context: CallbackContext):
    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /tiktok <username>")
        return
    
    username = context.args[0].replace("@", "")
    update.message.reply_text(f"üïí –ò—â—É @{username}...")
    
    data = get_tiktok_user_data(username)
    
    if "error" in data:
        update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
        return
    
    response = (
        f"üë§ –ò–º—è: {data['full_name']}\n"
        f"üìù Bio: {data['bio']}\n"
        f"üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–π: {data['private']}\n"
        f"‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {data['verified']}\n"
        f"üë• –ü–æ–¥–ø–∏—Å–∫–∏: {data['following']}\n"
        f"‚ù§Ô∏è –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {data['followers']}\n"
        f"üî• –õ–∞–π–∫–∏: {data['likes']}"
    )
    update.message.reply_text(response)

def main():
    TOKEN = "7946251650:AAG0DvWmRYV5VBeZdWlxoaytN90PwVDYk34"  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
    updater = Updater(TOKEN)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("tiktok", tiktok_command, pass_args=True))
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
